#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <sstream>
#include <fstream>
#include <string>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>

#define LL long long
#define debug cout<<"Error!"
#define INF 0x3f3f3f3f
#define PI atan(1.0)*4

using namespace std;
typedef pair<int, int> p;


int main()
{
	queue<p> park, b;
	int time, space, n, car, car2;
	char ch;
	cin >> n;
	p a;
	while (true)
	{
		cin >> ch;
		if (ch == 'A') {
			cin >> car >> time;
			if (park.size() < n) {
				a.first = car;
				a.second = time;
				park.push(a);
				printf("car#%d in parking space #%d\n", car, park.size());
			}
			else {
				printf("car#%d waiting\n", car);
				a.first = car;
				b.push(a);
			}
		}
		else if(ch == 'D') {
			int flag = 0;
			cin >> car >> time;
			car2 = park.front().first;
			while (park.front().first != car)
			{
				park.push(park.front());
				park.pop();
				if (park.front().first == car2) {
					flag = 1;
					break;
				}
			}
			if (flag) {
				printf("the car not in park\n");
			}
			else {
				printf("car#%d out,parking time %d\n", car, time - park.front().second);
				park.pop();
			}
			if (b.size()) {
				b.front().second = time;
				park.push(b.front());
				printf("car#%d in parking space #%d\n", b.front().first, park.size());
				b.pop();
			}
		}
		else {
			break;
		}

	}


	return 0;
}
