#include <malloc.h>
#include <iostream>
#include <stdio.h>
using namespace std;
typedef struct {
	char ch[100];
	int top = -1;
	int m;
}stack;
int empty(stack *q);
int push(stack *q, char e);
int pop(stack *q, char *e);


int main()
{
	int n, m, count = 0, j = 0, k;
	char ch[1000], d;
	cin >> n >> m;
	scanf("%c", &d);
	stack *q;
	q = (stack*)malloc(sizeof(stack));
	q->m = m;
	for (int i = 0; i < n; i++)
	{
		q->top = -1;
		j = 0;
		count = 0;
		do
		{
			scanf("%c", &ch[j]);
			j++;
		} while (ch[j - 1] != '\n');
		for (k = 0; k < j - 1; k++)
		{
			if (ch[k] == 'S') {
				if (!push(q, 's')) {
					cout << "NO" << endl;
					break;
				}
			}
			else if (ch[k] == 'X') {
				if (!pop(q, &d)) {
					cout << "NO" << endl;
					break;
				}
			}
		}
		if (empty(q)&&k==j-1) {
			cout << "YES" << endl;
		}
		else if(k==j-1&&!empty(q)){
			cout << "NO" << endl;
		}
		
		
	}

	return 0;

}
int empty(stack *q)
{
	if (q->top == -1)return 1;
	return 0;
}
int push(stack *q, char e)
{
	if (q->top == q->m - 1)return 0;
	q->top++;
	q->ch[q->top] = e;
	return 1;
}
int pop(stack *q, char *e)
{
	if (empty(q))return 0;
	*e = q->ch[q->top];
	q->top--;
	return 1;
}
