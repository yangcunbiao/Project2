#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <sstream>
#include <fstream>
#include <string>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>

#define LL long long
#define debug cout<<"Error!"
#define INF 0x3f3f3f3f
#define PI atan(1.0)*4

using namespace std;

int main()
{
	stack<char>s1, s2, s3;
	queue<char>qq;
	int flag = 0, a[10000], count=0;
	char ch, ch1, ch2;
	do {
		scanf("%c", &ch);
		if (ch == '\n') {
			break;
		}
		s2.push(ch);
	} while (true);
	while (s2.size())
	{
		s1.push(s2.top());
		s2.pop();
	}
	do {
		scanf("%c", &ch);
		if (ch == '\n') {
			break;
		}
		qq.push(ch);
	} while (true);
	while (qq.size())
	{
		ch = qq.front();
		qq.pop();
		while (true)
		{
			if (s3.size() == 0) {
				ch1 = s1.top();
				if (ch1 == ch) {
					s2.push(ch1);
					s1.pop();
					a[count] = 1;
					a[count + 1] = 2;
					count = count + 2;
					break;
				}
				else {
					s3.push(s1.top());
					s1.pop();
					a[count] = 1;
					a[count + 1] = 3;
					count = count + 2;
				}
			}
			else {
				if(s1.size())
				ch1 = s1.top();
				ch2 = s3.top();
				if (ch1 == ch&&s1.size()) {
					s2.push(ch1);
					s1.pop();
					a[count] = 1;
					a[count + 1] = 2;
					count = count + 2;
					break;
				}
				else if (ch2 == ch) {
					s2.push(ch2);
					s3.pop();
					a[count] = 3;
					a[count + 1] = 2;
					count = count + 2;
					break;
				}
				else {
					if (s1.size() == 0)flag = 1;
					int flag1 = 0;
					while (s1.size())
					{
						if (s1.top() == ch) {
							s2.push(s1.top());
							s1.pop();
							a[count] = 1;
							a[count + 1] = 2;
							count = count + 2;
							flag1 = 1;
							break;
						}
						else
						{
							s3.push(s1.top());
							s1.pop();
							a[count] = 1;
							a[count + 1] = 3;
							count = count + 2;
						}
						if (s1.size() == 0)flag = 1;
					}
					if (flag || flag1)break;
				}
			}
		}
		if (flag) {
			break;
		}
		if (qq.size() == 0)break;
	}
	if (flag) {
		printf("Are you kidding me?\n");
	}
	else {
		int i = 0;
		while (i<=count-2)
		{
			printf("%d->%d\n",a[i], a[i + 1]);
			i = i + 2;
		}
	}


	return 0;
}
